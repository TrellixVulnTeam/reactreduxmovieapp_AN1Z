{"ast":null,"code":"var _jsxFileName = \"D:\\\\PRACTICE\\\\PRACTICE\\\\movie\\\\redux-movie-app\\\\src\\\\components\\\\MovieDetail\\\\MovieDetail.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { fetchAsyncMSDetails, getAllselectedMSDetails } from '../../features/movies/movieSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieDetail = () => {\n  _s();\n\n  //getting the id form the url using use params\n  const {\n    imdbId\n  } = useParams();\n  const dispatch = useDispatch();\n  const data = useSelector(getAllselectedMSDetails);\n  useEffect(() => {\n    dispatch(fetchAsyncMSDetails(imdbId));\n  }, [dispatch, imdbId]); // run useEffect whenever the id changes\n  //fetch the details of the new id from server and get data to be displayed\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"MovieDetail\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieDetail, \"jaV0kRJTfZyym09ZKLvcmEzO/T4=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n\n_c = MovieDetail;\nexport default MovieDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"names":["React","useDispatch","useSelector","useParams","useEffect","fetchAsyncMSDetails","getAllselectedMSDetails","MovieDetail","imdbId","dispatch","data"],"sources":["D:/PRACTICE/PRACTICE/movie/redux-movie-app/src/components/MovieDetail/MovieDetail.js"],"sourcesContent":["import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom'\r\nimport { useEffect } from 'react';\r\nimport { \r\n  fetchAsyncMSDetails,\r\n  getAllselectedMSDetails\r\n       } from '../../features/movies/movieSlice';\r\n\r\nconst MovieDetail= () => {\r\n  //getting the id form the url using use params\r\nconst {imdbId} =  useParams();\r\nconst dispatch = useDispatch();\r\nconst data = useSelector(getAllselectedMSDetails)\r\nuseEffect(() => {\r\n  dispatch(fetchAsyncMSDetails(imdbId))\r\n  \r\n}, [dispatch,imdbId]); // run useEffect whenever the id changes\r\n//fetch the details of the new id from server and get data to be displayed\r\n\r\n  return (\r\n    <div>MovieDetail</div>\r\n  )\r\n}\r\n\r\nexport default MovieDetail"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SACEC,mBADF,EAEEC,uBAFF,QAGc,kCAHd;;;AAKA,MAAMC,WAAW,GAAE,MAAM;EAAA;;EACvB;EACF,MAAM;IAACC;EAAD,IAAYL,SAAS,EAA3B;EACA,MAAMM,QAAQ,GAAGR,WAAW,EAA5B;EACA,MAAMS,IAAI,GAAGR,WAAW,CAACI,uBAAD,CAAxB;EACAF,SAAS,CAAC,MAAM;IACdK,QAAQ,CAACJ,mBAAmB,CAACG,MAAD,CAApB,CAAR;EAED,CAHQ,EAGN,CAACC,QAAD,EAAUD,MAAV,CAHM,CAAT,CALyB,CAQF;EACvB;;EAEE,oBACE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAGD,CAdD;;GAAMD,W;UAEYJ,S,EACDF,W,EACJC,W;;;KAJPK,W;AAgBN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}